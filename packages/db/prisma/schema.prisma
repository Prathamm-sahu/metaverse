// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(cuid())
  name      String
  email     String   @unique
  username  String   @unique
  password  String
  avatarId  String?
  avatar    Avatar?  @relation(fields: [avatarId], references: [id])
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Space {
  id            String          @id @unique @default(cuid())
  name          String
  width         Int
  height        Int?
  thumbnail     String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  spaceElements SpaceElements[]
}

model SpaceElements {
  id        String  @id @unique @default(cuid())
  elementId String
  element   Element @relation(fields: [elementId], references: [id])
  spaceId   String
  space     Space   @relation(fields: [spaceId], references: [id])
  x         Int
  y         Int
}

model Element {
  id            String          @id @unique @default(cuid())
  width         Int
  height        Int
  imageUrl      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  spaceElements SpaceElements[]
  mapElements   MapElements[]
}

model Map {
  id          String        @id @unique @default(cuid())
  width       Int
  height      Int
  name        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  mapElements MapElements[]
}

model MapElements {
  id        String  @id @unique @default(cuid())
  mapId     String
  map       Map     @relation(fields: [mapId], references: [id])
  elementId String
  element   Element @relation(fields: [elementId], references: [id])
  x         Int?
  y         Int?
}

model Avatar {
  id        String   @id @unique @default(cuid())
  imageUrl  String
  name      String
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  Admin
  User
}
